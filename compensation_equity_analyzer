import streamlit as st
import openai
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import statsmodels.api as sm

# --- Configuration ---
openai.api_key = st.secrets['OPENAI_API_KEY']
st.set_page_config(page_title='Compensation Equity Analyzer', layout='wide')

st.title('Compensation Equity Analyzer')

# 파일 업로드
uploaded = st.file_uploader('급여 데이터 업로드 (CSV/Excel)', type=['csv', 'xlsx'])
if uploaded:
    df = pd.read_csv(uploaded) if uploaded.name.endswith('.csv') else pd.read_excel(uploaded)
    st.write('데이터 예시:', df.head())

    # 이상치 탐지
    numeric = df.select_dtypes(include=np.number)
    Q1 = numeric.quantile(0.25)
    Q3 = numeric.quantile(0.75)
    IQR = Q3 - Q1
    outliers = df[((numeric < (Q1 - 1.5 * IQR)) | (numeric > (Q3 + 1.5 * IQR))).any(axis=1)]
    st.write('이상치 행:', outliers)

    # 회귀분석: 급여 ~ 경력연수 + 직급
    df_clean = df.dropna(subset=['salary', 'years_experience', 'level'])
    X = pd.get_dummies(df_clean[['years_experience', 'level']], drop_first=True)
    y = df_clean['salary']
    X = sm.add_constant(X)
    model = sm.OLS(y, X).fit()
    st.write(model.summary())

    # Box Plot: 부서·성별 급여 분포
    fig1, ax1 = plt.subplots()
    df.boxplot(column='salary', by=['department', 'gender'], ax=ax1)
    ax1.set_title('부서·성별 급여 분포')
    ax1.set_xlabel('')
    st.pyplot(fig1)

    # Heatmap: 공정성 지수
    pivot = df.pivot_table(index='department', columns='gender', values='salary', aggfunc='mean')
    equity_gap = pivot.divide(pivot.mean(axis=1), axis=0)
    fig2, ax2 = plt.subplots()
    cax = ax2.matshow(equity_gap)
    fig2.colorbar(cax)
    ax2.set_xticks(range(len(equity_gap.columns)))
    ax2.set_xticklabels(equity_gap.columns)
    ax2.set_yticks(range(len(equity_gap.index)))
    ax2.set_yticklabels(equity_gap.index)
    ax2.set_title('부서×성별 급여 공정성 지수')
    st.pyplot(fig2)

    # 예산 시뮬레이션
    st.subheader('예산 시뮬레이션')
    total_cost = df['salary'].sum()
    inc_pct = st.slider('증액 비율 (%)', 0, 50, 10)
    sim_cost = total_cost * (1 + inc_pct/100)
    st.write(f"총 예산: {total_cost:,.0f} → {sim_cost:,.0f} (증가 {inc_pct}%)")

    # AI 요약 및 개선 방안
    summary = pivot.to_csv()
    prompt = f"부서별 성별 급여 차이를 분석한 결과, 주요 이슈와 개선 방안을 3가지 제안해줘.\n\n데이터 요약:\n{summary}"
    resp = openai.ChatCompletion.create(model='gpt-4', messages=[{'role':'user','content':prompt}])
    st.subheader('AI 요약 & 개선 방안')
    st.write(resp.choices[0].message.content)
